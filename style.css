/* karla-regular - latin */
@font-face {
    font-display: swap;
    font-family: "Karla";
    font-style: normal;
    font-weight: 400;
    src: url("./assets/fonts/karla-v31-latin-regular.woff2") format("woff2");
}

/* karla-700 - latin */
@font-face {
    font-display: swap;
    font-family: "Karla";
    font-style: normal;
    font-weight: 700;
    src: url("./assets/fonts/karla-v31-latin-700.woff2") format("woff2");
}

:root {
    /* # Colors */

    /* ## Primary */

    --clr-light-green: hsl(148, 38%, 91%);
    --clr-green: hsl(169, 82%, 27%);
    --clr-red: hsl(0, 66%, 54%);

    /* ## Neutral */

    --clr-white: hsl(0, 0%, 100%);
    --clr-light-grey: hsl(186, 15%, 59%);
    --clr-dark-grey: hsl(187, 24%, 22%);

    /* # Typography */

    /* ## Font */

    /* ### Font family */

    --ff-regular: "Karla", sans-serif;

    /* ### Font weights */

    --fw-bold: 700;
}

/* CSS RESET */
/*
	1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
    box-sizing: border-box;
}
/*
	2. Remove default margin
  */
* {
    margin: 0;
    padding: 0;
}
/*
	Typographic tweaks!
	3. Add accessible line-height
	4. Improve text rendering
  */
body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}
/*
	5. Improve media defaults
  */
img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}
/*
	6. Remove built-in form typography styles
  */
input,
button,
textarea,
select {
    font: inherit;
}
/*
	7. Avoid text overflows
  */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}
/*
	8. Create a root stacking context
  */
#root,
#__next {
    isolation: isolate;
}

/* GENERAL STYLES */

body {
    min-height: 100dvh;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 3rem;
    padding: 2rem 1rem;
    background-color: var(--clr-light-green);
    font-family: var(--ff-regular);
}

main {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

h1 {
    color: var(--clr-dark-grey);
    text-transform: capitalize;
}

/* FORM CONTAINER STYLES */

.form-container {
    max-width: 34.375rem;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    color: var(--clr-dark-grey);
    padding: 1.25rem;
    background-color: var(--clr-white);
    border-radius: 0.5rem;
}

/* INPUT WRAPPERS/CONTAINERS STYLES */

.input-wrapper {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.input-wrapper > label:first-child,
.input-wrapper > p.query-type-label,
.radio-input-wrapper > label {
    text-transform: capitalize;
}

.consent-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.consent-input-wrapper {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.consent-input-wrapper > label {
    font-size: 0.9375rem;
}

.input-wrapper > label:first-child::after,
.input-wrapper > p.query-type-label::after,
.consent-input-wrapper > label::after {
    content: " *";
    color: var(--clr-green);
    font-weight: var(--fw-bold);
}

.radio-input-wrapper {
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.input-wrapper > textarea {
    min-height: 14.0625rem;
    resize: none;
}

.input-wrapper > input,
.radio-input-wrapper,
.input-wrapper > textarea {
    color: var(--clr-dark-grey);
    padding: 0.65rem 1rem;
    border: 0.0625rem solid var(--clr-light-grey);
    border-radius: 0.5rem;
}

/* SUBMIT BUTTON STYLES */

.submit-button {
    padding: 0.75rem;
    color: var(--clr-white);
    text-transform: capitalize;
    font-weight: var(--fw-bold);
    border: none;
    background-color: var(--clr-green);
    border-radius: 0.5rem;
}

/* ATTRIBUTION STYLES */

.attribution {
    font-size: 0.6875rem;
    text-align: center;
}
.attribution a {
    color: hsl(228, 45%, 44%);
    transition: all 0.4s;
}

.attribution a:hover,
.attribution a:focus {
    color: hsl(228, 99%, 70%);
}

/* ACTIVE STATES STYLES */

input:focus,
textarea:focus,
input:hover,
textarea:hover {
    outline: 2px solid var(--clr-green);
    cursor: pointer;
}

label:hover {
    cursor: pointer;
}

input[type="radio"],
input[type="checkbox"] {
    accent-color: var(--clr-green);
}

input[type="radio"]:hover,
input[type="radio"]:focus,
input[type="checkbox"]:hover,
input[type="checkbox"]:focus {
    outline-offset: 1px;
}

input[type="radio"]:hover,
input[type="radio"]:focus {
    outline: none;
}

.radio-input-wrapper:has(input[type="radio"]:checked) {
    background-color: var(--clr-light-green);
}

.radio-input-wrapper:has(*:hover),
.radio-input-wrapper:focus-within {
    outline: 2px solid var(--clr-green);
}

.submit-button:focus,
.submit-button:hover {
    color: var(--clr-green);
    background-color: var(--clr-light-green);
    cursor: pointer;
    outline: 2px solid var(--clr-green);
}

/* ERROR STYLES */

.error-message {
    display: none;
    font-size: 0.8125rem;
    color: var(--clr-red);
    font-weight: var(--fw-bold);
}

.error-message.error-active {
    display: block;
}

input.error-active,
textarea.error-active {
    box-shadow: 0 0 0 1px var(--clr-red);
}

input.error-active:focus,
input.error-active:hover,
textarea.error-active:focus,
textarea.error-active:hover {
    outline: 0.125rem solid var(--clr-red);
}

@media (min-width: 48rem) {
    body {
        padding: 3rem;
    }

    .form-container {
        max-width: 46rem;
        display: grid;
        column-gap: 1.25rem;
        grid-template-columns: repeat(2, 1fr);
        padding: 2rem;
    }

    h1 {
        grid-column: 1/-1;
    }

    .form-container > .input-wrapper:nth-child(4) {
        grid-column: 1/-1;
    }

    .form-container > .input-wrapper:nth-child(5) {
        grid-column: 1/-1;
    }

    .form-container > .input-wrapper:nth-child(5) {
        display: grid;
        column-gap: 1.25rem;
        grid-template-columns: repeat(2, 1fr);
    }

    .form-container > .input-wrapper:nth-child(5) > :first-child {
        grid-column: 1/-1;
    }

    .form-container > .input-wrapper:nth-child(6) {
        grid-column: 1/-1;
    }

    .input-wrapper > textarea {
        min-height: 7.8125rem;
    }

    .form-container > .consent-container:nth-child(7) {
        grid-column: 1/-1;
    }

    .form-container > :last-child {
        grid-column: 1/-1;
    }
}
